import {createSlice} from "@reduxjs/toolkit"

const postSlice = createSlice({
    name:"post",
    initialState:{
        loading:false,
        post:{},
        ispostUpdated:false,
        ispostDeleted:false,
        isCreatedPost:false
    },
    reducers:{
        postRequest(state,action){
            return{
                ...state,
                loading:true            
            }
        },
        postSuccess(state,action){
            console.log(action.payload.posts)
            return{
                ...state,
                loading:false,
                posts:action.payload.posts
            }
        },
        postFail(state,action){
            return{
                ...state,
                loading:false,
                error:action.payload.error
            }
        },
        deletePostRequest(state,action){
            return{
                ...state,
                loading:true            
            }
        },
        deletePostSuccess(state,action){
            return{
                ...state,
                loading:false,
                ispostDeleted:true
            }
        },
        deletePostFail(state,action){
            return{
                ...state,
                loading:false,
                error:action.payload.error,
                ispostDeleted:false
            }
        },
        createPostRequest(state,action){
            return{
                ...state,
                loading:true            
            }
        },
        createPostSuccess(state,action){
            return{
                ...state,
                loading:false,
                posts:action.payload.posts,
                isCreatedPost:true
            }
        },
        createPostFail(state,action){
            return{
                ...state,
                loading:false,
                error:action.payload.error,
                isCreatedPost:false
            }
        },
        clearPostCreated(state,action){
            return{
                ...state,
                isCreatedPost:false
            }
        },
        clearPostDeleted(state,action){
            return{
                ...state,
                ispostDeleted:false
            }
        },
        updatePostRequest(state,action){
            return{
                ...state,
                loading:true            
            }
        },
        updatePostSuccess(state,action){
            return{
                ...state,
                loading:false,
                posts:action.payload.posts,
                ispostUpdated:true
            }
        },
        updatePostFail(state,action){
            return{
                ...state,
                loading:false,
                error:action.payload.error,
                ispostUpdated:false
            }
        }
    }
})

const {actions,reducer} = postSlice

export const {postRequest,postSuccess,postFail,deletePostFail,deletePostRequest,deletePostSuccess,clearPostCreated,clearPostDeleted,createPostFail,createPostRequest,createPostSuccess,updatePostFail,updatePostRequest,updatePostSuccess}=actions

export default reducer